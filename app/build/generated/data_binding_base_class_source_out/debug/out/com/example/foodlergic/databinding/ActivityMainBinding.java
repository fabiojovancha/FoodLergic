// Generated by view binder compiler. Do not edit!
package com.example.foodlergic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodlergic.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final Button cameraButton;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final Button galleryButton;

  @NonNull
  public final Button predictButton;

  @NonNull
  public final ImageView previewImage;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final TextView warningText;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull Button cameraButton,
      @NonNull ConstraintLayout container, @NonNull Button galleryButton,
      @NonNull Button predictButton, @NonNull ImageView previewImage, @NonNull TextView resultText,
      @NonNull TextView warningText) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.cameraButton = cameraButton;
    this.container = container;
    this.galleryButton = galleryButton;
    this.predictButton = predictButton;
    this.previewImage = previewImage;
    this.resultText = resultText;
    this.warningText = warningText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.cameraButton;
      Button cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.galleryButton;
      Button galleryButton = ViewBindings.findChildViewById(rootView, id);
      if (galleryButton == null) {
        break missingId;
      }

      id = R.id.predictButton;
      Button predictButton = ViewBindings.findChildViewById(rootView, id);
      if (predictButton == null) {
        break missingId;
      }

      id = R.id.previewImage;
      ImageView previewImage = ViewBindings.findChildViewById(rootView, id);
      if (previewImage == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.warningText;
      TextView warningText = ViewBindings.findChildViewById(rootView, id);
      if (warningText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, bottomNavigation, cameraButton,
          container, galleryButton, predictButton, previewImage, resultText, warningText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
